[class(top,none,[],[],[],[],[]),class(world,top,[],[],[],[],[[[drinks],[visited=>no,position=>[1,0],id=>1,type=>shelf],[],[],[]],[[food],[visited=>no,position=>[1,1],id=>2,type=>shelf],[],[],[]],[[bread],[visited=>no,position=>[0,1],id=>3,type=>shelf],[],[],[]],[[nowhere],[id=>0],[],[],[]]]),class(robot,top,[],[],[],[],[[[robbie],[],[],[],[]]]),class(items,top,[],[],[],[],[[[soda],[idealLoc=>drinks,observedLoc=>nowhere,diagnosedLoc=>nowhere,isPlaced=>yes],[],[],[]],[[beer],[idealLoc=>drinks,observedLoc=>nowhere,diagnosedLoc=>nowhere,isPlaced=>yes],[],[],[]],[[soup],[idealLoc=>food,observedLoc=>nowhere,diagnosedLoc=>nowhere,isPlaced=>yes],[],[],[]],[[cookies],[idealLoc=>bread,observedLoc=>nowhere,diagnosedLoc=>nowhere,isPlaced=>yes],[],[],[]]])]


Clase: top

Clase: world
Descripción de los objetos: Todos los lugares de interés en el mundo
Propiedades de objetos:
	visited => yes/no			(exclusivo para estantes) dice si el estante ya fue visitado por el robot
	position => [X, Y]			posición del lugar 
	id => 1/2/3.../n			(exclusivo para estantes) da el número del estante
	type => shelf/client/other		tipo de lugar

Clase: items
Descripción de los objetos: Todos los items que existen
Propiedades de objetos:
	idealLoc => shelfName			posición ideal del item en los estantes
	observedLoc => shelfName/nowhere	posición observada del item en los estantes
	diagnosedLoc => shelfName/nowhere	posición diagnosticada del item en los estantes
	realLoc => ShelfName/nowhere		posición real del item en los estantes (para simulación)
	isPlaced => yes/no			dice si el item fue colocado o no por el asistente del supermercado (inicialmente, sólo los items que el asistente reportó deberían tener isPlaced=>yes)
	isRequested => yes/no			dice si el item fue solicitado por el cliente
	probSeen => 0-1				probabilidad de ser visto correctamente
	probPicked => 0-1			probabilidad de ser agarrado correctamente
	probPlaced => 0-1			probabilidad de ser colocado correctamente

Clase: robot
Descripción: Todos los robots del mundo (nada más trabajaremos con uno)
Propiedades de objetos:
	position => positionID (0/1/2...)	0 = posición del cliente, 1..n =posiciones de los estantes
	decisionList => [Lista de decisiones]
	plan => [Lista de acciones]
	hands => [Item1/nothing, Item2/nothing]
	probMove => 0-1				probabilidad de moverse correctamente






